events {}
http {
    # Upstream API backend
    upstream backend {
        server backend:8000;
    }

    # Upstream frontend
    upstream frontend {
        server frontend:3000;
    }

    # Rate limiting zone (10 req/s per IP)
    limit_req_zone $binary_remote_addr zone=api_limit:10m rate=10r/s;

    # HTTP -> HTTPS redirect (optional, if you have SSL)
    server {
        listen 80;
        server_name localhost;
        return 301 https://$host$request_uri;
    }

    server {
        listen 443 ssl;
        server_name localhost;

        # Self-signed certs for local dev, replace with your certs in production
        ssl_certificate /etc/letsencrypt/live/localhost/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/localhost/privkey.pem;
        # include /etc/letsencrypt/options-ssl-nginx.conf; # Optional: include if you have it
        # ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;   # Optional: include if you have it

        # Serve static frontend
        location / {
            proxy_pass http://frontend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # API proxy
        location /api/ {
            proxy_pass http://backend/api/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            # limit_req zone=api_limit burst=20 nodelay; # Rate limiting
        }

        # WebSocket proxy
        location /ws/ {
            proxy_pass http://backend/ws;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "Upgrade";
            proxy_set_header Host $host;
        }
    }
}
