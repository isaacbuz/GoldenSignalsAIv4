import React from 'react';
import type { Meta, StoryObj } from '@storybook/react';
import { Button } from './Button';
import { action } from '@storybook/addon-actions';

const meta = {
    title: 'Core/Button',
    component: Button,
    parameters: {
        layout: 'centered',
        docs: {
            description: {
                component: 'A versatile button component with multiple variants, sizes, and states. Supports icons, loading states, and ripple effects.'
            }
        }
    },
    tags: ['autodocs'],
    argTypes: {
        variant: {
            control: 'select',
            options: ['primary', 'secondary', 'success', 'danger', 'ghost'],
            description: 'Visual style variant',
            table: {
                defaultValue: { summary: 'primary' }
            }
        },
        size: {
            control: 'radio',
            options: ['small', 'medium', 'large'],
            description: 'Button size',
            table: {
                defaultValue: { summary: 'medium' }
            }
        },
        fullWidth: {
            control: 'boolean',
            description: 'Make button take full width of container',
            table: {
                defaultValue: { summary: false }
            }
        },
        loading: {
            control: 'boolean',
            description: 'Show loading spinner and disable interaction',
            table: {
                defaultValue: { summary: false }
            }
        },
        disabled: {
            control: 'boolean',
            description: 'Disable button interaction',
            table: {
                defaultValue: { summary: false }
            }
        },
        ripple: {
            control: 'boolean',
            description: 'Enable ripple effect on click',
            table: {
                defaultValue: { summary: true }
            }
        }
    }
} satisfies Meta<typeof Button>;

export default meta;
type Story = StoryObj<typeof meta>;

// Basic examples
export const Default: Story = {
    args: {
        children: 'Button',
        onClick: action('button-click')
    }
};

export const Primary: Story = {
    args: {
        children: 'Primary Button',
        variant: 'primary',
        onClick: action('primary-click')
    }
};

export const Secondary: Story = {
    args: {
        children: 'Secondary Button',
        variant: 'secondary',
        onClick: action('secondary-click')
    }
};

export const Success: Story = {
    args: {
        children: 'Success Button',
        variant: 'success',
        onClick: action('success-click')
    }
};

export const Danger: Story = {
    args: {
        children: 'Danger Button',
        variant: 'danger',
        onClick: action('danger-click')
    }
};

export const Ghost: Story = {
    args: {
        children: 'Ghost Button',
        variant: 'ghost',
        onClick: action('ghost-click')
    }
};

// Size variations
export const Sizes: Story = {
    render: () => (
        <div style={{ display: 'flex', gap: '1rem', alignItems: 'center' }}>
            <Button size="small" onClick={action('small-click')}>Small</Button>
            <Button size="medium" onClick={action('medium-click')}>Medium</Button>
            <Button size="large" onClick={action('large-click')}>Large</Button>
        </div>
    )
};

// With icons
export const WithIcons: Story = {
    render: () => (
        <div style={{ display: 'flex', gap: '1rem', flexWrap: 'wrap' }}>
            <Button startIcon={<span>üöÄ</span>} onClick={action('start-icon-click')}>
                Launch
            </Button>
            <Button endIcon={<span>‚Üí</span>} onClick={action('end-icon-click')}>
                Continue
            </Button>
            <Button
                startIcon={<span>üíæ</span>}
                endIcon={<span>‚úì</span>}
                variant="success"
                onClick={action('both-icons-click')}
            >
                Save & Continue
            </Button>
        </div>
    )
};

// States
export const Loading: Story = {
    args: {
        children: 'Loading...',
        loading: true
    }
};

export const Disabled: Story = {
    args: {
        children: 'Disabled',
        disabled: true
    }
};

export const FullWidth: Story = {
    args: {
        children: 'Full Width Button',
        fullWidth: true
    },
    parameters: {
        layout: 'padded'
    }
};

// Interactive demo
export const InteractiveDemo: Story = {
    render: () => {
        const [loading, setLoading] = React.useState(false);

        const handleClick = () => {
            action('async-action-start')();
            setLoading(true);
            setTimeout(() => {
                setLoading(false);
                action('async-action-complete')();
            }, 2000);
        };

        return (
            <div style={{ display: 'flex', flexDirection: 'column', gap: '2rem', width: '300px' }}>
                <div>
                    <h3>Async Action Demo</h3>
                    <p>Click the button to see loading state</p>
                    <Button
                        loading={loading}
                        onClick={handleClick}
                        fullWidth
                    >
                        {loading ? 'Processing...' : 'Submit Form'}
                    </Button>
                </div>
            </div>
        );
    }
};

// All variants showcase
export const AllVariants: Story = {
    render: () => (
        <div style={{ display: 'flex', flexDirection: 'column', gap: '2rem' }}>
            <div>
                <h3>Normal State</h3>
                <div style={{ display: 'flex', gap: '1rem', flexWrap: 'wrap' }}>
                    <Button variant="primary">Primary</Button>
                    <Button variant="secondary">Secondary</Button>
                    <Button variant="success">Success</Button>
                    <Button variant="danger">Danger</Button>
                    <Button variant="ghost">Ghost</Button>
                </div>
            </div>

            <div>
                <h3>Disabled State</h3>
                <div style={{ display: 'flex', gap: '1rem', flexWrap: 'wrap' }}>
                    <Button variant="primary" disabled>Primary</Button>
                    <Button variant="secondary" disabled>Secondary</Button>
                    <Button variant="success" disabled>Success</Button>
                    <Button variant="danger" disabled>Danger</Button>
                    <Button variant="ghost" disabled>Ghost</Button>
                </div>
            </div>

            <div>
                <h3>Loading State</h3>
                <div style={{ display: 'flex', gap: '1rem', flexWrap: 'wrap' }}>
                    <Button variant="primary" loading>Primary</Button>
                    <Button variant="secondary" loading>Secondary</Button>
                    <Button variant="success" loading>Success</Button>
                    <Button variant="danger" loading>Danger</Button>
                    <Button variant="ghost" loading>Ghost</Button>
                </div>
            </div>
        </div>
    )
};

// Use cases
export const RealWorldExamples: Story = {
    render: () => (
        <div style={{ display: 'flex', flexDirection: 'column', gap: '2rem', maxWidth: '400px' }}>
            <div style={{
                padding: '1.5rem',
                border: '1px solid #ddd',
                borderRadius: '8px',
                display: 'flex',
                flexDirection: 'column',
                gap: '1rem'
            }}>
                <h3 style={{ margin: 0 }}>Trading Actions</h3>
                <div style={{ display: 'flex', gap: '0.5rem' }}>
                    <Button variant="success" size="large" startIcon={<span>üìà</span>}>
                        Buy
                    </Button>
                    <Button variant="danger" size="large" startIcon={<span>üìâ</span>}>
                        Sell
                    </Button>
                </div>
                <Button variant="secondary" fullWidth startIcon={<span>‚è±Ô∏è</span>}>
                    Set Price Alert
                </Button>
            </div>

            <div style={{
                padding: '1.5rem',
                border: '1px solid #ddd',
                borderRadius: '8px',
                display: 'flex',
                flexDirection: 'column',
                gap: '1rem'
            }}>
                <h3 style={{ margin: 0 }}>Form Actions</h3>
                <div style={{ display: 'flex', gap: '0.5rem', justifyContent: 'flex-end' }}>
                    <Button variant="ghost">Cancel</Button>
                    <Button variant="primary" startIcon={<span>üíæ</span>}>
                        Save Changes
                    </Button>
                </div>
            </div>

            <div style={{
                padding: '1.5rem',
                border: '1px solid #ddd',
                borderRadius: '8px',
                display: 'flex',
                flexDirection: 'column',
                gap: '1rem'
            }}>
                <h3 style={{ margin: 0 }}>Danger Zone</h3>
                <p style={{ margin: 0, fontSize: '0.875rem', color: '#666' }}>
                    This action cannot be undone.
                </p>
                <Button variant="danger" fullWidth startIcon={<span>‚ö†Ô∏è</span>}>
                    Delete Account
                </Button>
            </div>
        </div>
    )
};

// Accessibility demo
export const AccessibilityDemo: Story = {
    render: () => (
        <div style={{ display: 'flex', flexDirection: 'column', gap: '2rem' }}>
            <div>
                <h3>With ARIA Labels</h3>
                <div style={{ display: 'flex', gap: '1rem' }}>
                    <Button
                        aria-label="Close dialog"
                        variant="ghost"
                        size="small"
                    >
                        ‚úï
                    </Button>
                    <Button
                        aria-label="Add to favorites"
                        variant="secondary"
                    >
                        ‚ù§Ô∏è
                    </Button>
                    <Button
                        aria-label="Play video"
                        aria-pressed="false"
                        variant="primary"
                    >
                        ‚ñ∂Ô∏è Play
                    </Button>
                </div>
            </div>

            <div>
                <h3>Focus Management</h3>
                <p>Tab through these buttons to see focus states</p>
                <div style={{ display: 'flex', gap: '1rem' }}>
                    <Button>First</Button>
                    <Button variant="secondary">Second</Button>
                    <Button variant="success">Third</Button>
                </div>
            </div>
        </div>
    )
}; 